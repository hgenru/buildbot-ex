# -*- python -*-
# encoding: utf-8
# ex: set syntax=python:

# This is a sample buildmaster config file. It must be installed as
# 'master.cfg' in your buildmaster's base directory.

# This is the dictionary that the buildmaster pays attention to. We also use
# a shorter alias to save typing.
c = BuildmasterConfig = {}

# SLAVES
c['slavePortnum'] = 9989  # not overridden in projects

####### STATUS TARGETS
# 'status' is a list of Status Targets. The results of each build will be
# pushed to these targets. buildbot/status/*.py has a variety to choose from,
# including web pages, email senders, and IRC bots.
c['status'] = []

from buildbot.status import html
from buildbot.status.web import authz
from ldap_auth import LDAPAuth

authz_cfg = authz.Authz(
    # change any of these to True to enable; see the manual for more
    # options
    auth=LDAPAuth("ldap.example.com", "dc=example,dc=ru"),
    gracefulShutdown="auth",
    forceBuild="auth",
    forceAllBuilds="auth",
    pingBuilder="auth",
    stopBuild="auth",
    stopAllBuilds="auth",
    cancelPendingBuild="auth")
c['status'].append(html.WebStatus(http_port=8080, authz=authz_cfg))


####### PROJECT IDENTITY
# the 'title' string will appear at the top of this buildbot
# installation's html.WebStatus home page (linked to the
# 'titleURL') and is embedded in the title of the waterfall HTML page.
c['title'] = "Example"
c['titleURL'] = "https://example.com"

# the 'buildbotURL' string should point to the location where the buildbot's
# internal web server (usually the html.WebStatus page) is visible. This
# typically uses the port number set in the Waterfall 'status' entry, but
# with an externally-visible host name which the buildbot cannot figure out
# without some help.
c['buildbotURL'] = "http://localhost:8080"


####### DB URL
c['db'] = {
    # This specifies what database buildbot uses to store its state.
    # You can leave this at its default for all but the largest installations.
    'db_url': "sqlite:///state.sqlite",
}


# ==================================================================
# Load Projects
import os
import sys
# Add path
sys.path.append(
    os.path.dirname(os.path.dirname(os.path.realpath(__file__))))
import project
# Modify config
project.ProjectLoader(
    conf=BuildmasterConfig,
    path=os.path.join(os.path.dirname(__file__), "projects")
)
# ==================================================================